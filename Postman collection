
https://www.getpostman.com/collections/e9f628fdd8c6b391d1f1


To get/set var through script

console.log("Hello world....");
let urlVar = pm.variables.get("url");
console.log("Value of urlVar is "+urlVar);

pm.variables.set("name","Postman");
console.log(pm.variables.get("name"));

let globalVar=pm.globals.get("Environment");
console.log(globalVar);

pm.environment.set("env","Test");
console.log(pm.environment.get("env"));

to pass value from one api to other:
console.log(responseBody);
bodyData=JSON.parse(responseBody);
value=bodyData.data[2].first_name;
console.log(value);
pm.environment.set("username1", value);

to automate authorization:
bodyData=JSON.parse(responseBody);
value=bodyData.responseData.accessToken;
console.log(value);
pm.environment.set("authToken", value);
pm.test("Status code is 200", function () {
    pm.response.to.have.status(200);
});
pm.test("Successful POST request", function () {
    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);
});

Newman is built on Node.js. To run Newman, make sure you have Node.js installed.

You can download and install Node.js on Linux, Windows, and Mac OSX.

After you install Node.js, Newman is just a command away. Install Newman from npm globally on your system, which allows you to run it from anywhere.

$ npm install -g newman
The easiest way to run Newman is to run it with a collection. You can run any collection file from your file system.

To learn how to export collections to share as a file, see the collection documentation.

$ newman run mycollection.json
You can also pass a collection as a URL. For more information, see the documentation for collections to learn how to share a file as a URL.

Your collection probably uses environment variables. To provide an accompanying set of environment variables, export the template from Postman and run them with the -e flag.
